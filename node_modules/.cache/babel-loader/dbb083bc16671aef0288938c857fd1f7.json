{"ast":null,"code":"import isPlainObject from 'lodash/isPlainObject';\n/**\n * Handles errors received from the server. Parses the error into a more useful\n * format, places it in an exception and throws it.\n * See https://www.contentful.com/developers/docs/references/errors/\n * for more details on the data received on the errorResponse.data property\n * and the expected error codes.\n * @private\n * @param {Object} errorResponse - Error received from an axios request\n * @throws {ErrorResponse}\n */\n\nexport default function errorHandler(errorResponse) {\n  var config = errorResponse.config,\n      response = errorResponse.response;\n  var errorName = void 0;\n\n  if (!isPlainObject(response) || !isPlainObject(config)) {\n    throw errorResponse;\n  }\n\n  var data = response.data;\n  var errorData = {\n    status: response.status,\n    statusText: response.statusText,\n    message: '',\n    details: {} // Obscure the Management token\n\n  };\n\n  if (config.headers && config.headers['Authorization']) {\n    var token = '...' + config.headers['Authorization'].substr(-5);\n    config.headers['Authorization'] = 'Bearer ' + token;\n  }\n\n  if (isPlainObject(config)) {\n    errorData.request = {\n      url: config.url,\n      headers: config.headers,\n      method: config.method,\n      payloadData: config.data\n    };\n  }\n\n  if (isPlainObject(data)) {\n    if ('requestId' in data) {\n      errorData.requestId = data.requestId || 'UNKNOWN';\n    }\n\n    if ('message' in data) {\n      errorData.message = data.message || '';\n    }\n\n    if ('details' in data) {\n      errorData.details = data.details || {};\n    }\n\n    if ('sys' in data) {\n      if ('id' in data.sys) {\n        errorName = data.sys.id;\n      }\n    }\n  }\n\n  var error = new Error();\n  error.name = errorName && errorName !== 'Unknown' ? errorName : response.status + ' ' + response.statusText;\n  error.message = JSON.stringify(errorData, null, '  ');\n  throw error;\n}","map":{"version":3,"sources":["C:/Users/στελης/Desktop/Hotel React/resort/node_modules/contentful-management/dist/es-modules/error-handler.js"],"names":["isPlainObject","errorHandler","errorResponse","config","response","errorName","data","errorData","status","statusText","message","details","headers","token","substr","request","url","method","payloadData","requestId","sys","id","error","Error","name","JSON","stringify"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,sBAA1B;AAEA;;;;;;;;;;;AAUA,eAAe,SAASC,YAAT,CAAsBC,aAAtB,EAAqC;AAClD,MAAIC,MAAM,GAAGD,aAAa,CAACC,MAA3B;AAAA,MACIC,QAAQ,GAAGF,aAAa,CAACE,QAD7B;AAGA,MAAIC,SAAS,GAAG,KAAK,CAArB;;AAEA,MAAI,CAACL,aAAa,CAACI,QAAD,CAAd,IAA4B,CAACJ,aAAa,CAACG,MAAD,CAA9C,EAAwD;AACtD,UAAMD,aAAN;AACD;;AAED,MAAII,IAAI,GAAGF,QAAQ,CAACE,IAApB;AAGA,MAAIC,SAAS,GAAG;AACdC,IAAAA,MAAM,EAAEJ,QAAQ,CAACI,MADH;AAEdC,IAAAA,UAAU,EAAEL,QAAQ,CAACK,UAFP;AAGdC,IAAAA,OAAO,EAAE,EAHK;AAIdC,IAAAA,OAAO,EAAE,EAJK,CAMd;;AANc,GAAhB;;AAOE,MAAIR,MAAM,CAACS,OAAP,IAAkBT,MAAM,CAACS,OAAP,CAAe,eAAf,CAAtB,EAAuD;AACvD,QAAIC,KAAK,GAAG,QAAQV,MAAM,CAACS,OAAP,CAAe,eAAf,EAAgCE,MAAhC,CAAuC,CAAC,CAAxC,CAApB;AACAX,IAAAA,MAAM,CAACS,OAAP,CAAe,eAAf,IAAkC,YAAYC,KAA9C;AACD;;AACD,MAAIb,aAAa,CAACG,MAAD,CAAjB,EAA2B;AACzBI,IAAAA,SAAS,CAACQ,OAAV,GAAoB;AAClBC,MAAAA,GAAG,EAAEb,MAAM,CAACa,GADM;AAElBJ,MAAAA,OAAO,EAAET,MAAM,CAACS,OAFE;AAGlBK,MAAAA,MAAM,EAAEd,MAAM,CAACc,MAHG;AAIlBC,MAAAA,WAAW,EAAEf,MAAM,CAACG;AAJF,KAApB;AAMD;;AACD,MAAIN,aAAa,CAACM,IAAD,CAAjB,EAAyB;AACvB,QAAI,eAAeA,IAAnB,EAAyB;AACvBC,MAAAA,SAAS,CAACY,SAAV,GAAsBb,IAAI,CAACa,SAAL,IAAkB,SAAxC;AACD;;AACD,QAAI,aAAab,IAAjB,EAAuB;AACrBC,MAAAA,SAAS,CAACG,OAAV,GAAoBJ,IAAI,CAACI,OAAL,IAAgB,EAApC;AACD;;AACD,QAAI,aAAaJ,IAAjB,EAAuB;AACrBC,MAAAA,SAAS,CAACI,OAAV,GAAoBL,IAAI,CAACK,OAAL,IAAgB,EAApC;AACD;;AACD,QAAI,SAASL,IAAb,EAAmB;AACjB,UAAI,QAAQA,IAAI,CAACc,GAAjB,EAAsB;AACpBf,QAAAA,SAAS,GAAGC,IAAI,CAACc,GAAL,CAASC,EAArB;AACD;AACF;AACF;;AAED,MAAIC,KAAK,GAAG,IAAIC,KAAJ,EAAZ;AACAD,EAAAA,KAAK,CAACE,IAAN,GAAanB,SAAS,IAAIA,SAAS,KAAK,SAA3B,GAAuCA,SAAvC,GAAmDD,QAAQ,CAACI,MAAT,GAAkB,GAAlB,GAAwBJ,QAAQ,CAACK,UAAjG;AACAa,EAAAA,KAAK,CAACZ,OAAN,GAAgBe,IAAI,CAACC,SAAL,CAAenB,SAAf,EAA0B,IAA1B,EAAgC,IAAhC,CAAhB;AACA,QAAMe,KAAN;AACD","sourcesContent":["import isPlainObject from 'lodash/isPlainObject';\n\n/**\n * Handles errors received from the server. Parses the error into a more useful\n * format, places it in an exception and throws it.\n * See https://www.contentful.com/developers/docs/references/errors/\n * for more details on the data received on the errorResponse.data property\n * and the expected error codes.\n * @private\n * @param {Object} errorResponse - Error received from an axios request\n * @throws {ErrorResponse}\n */\nexport default function errorHandler(errorResponse) {\n  var config = errorResponse.config,\n      response = errorResponse.response;\n\n  var errorName = void 0;\n\n  if (!isPlainObject(response) || !isPlainObject(config)) {\n    throw errorResponse;\n  }\n\n  var data = response.data;\n\n\n  var errorData = {\n    status: response.status,\n    statusText: response.statusText,\n    message: '',\n    details: {}\n\n    // Obscure the Management token\n  };if (config.headers && config.headers['Authorization']) {\n    var token = '...' + config.headers['Authorization'].substr(-5);\n    config.headers['Authorization'] = 'Bearer ' + token;\n  }\n  if (isPlainObject(config)) {\n    errorData.request = {\n      url: config.url,\n      headers: config.headers,\n      method: config.method,\n      payloadData: config.data\n    };\n  }\n  if (isPlainObject(data)) {\n    if ('requestId' in data) {\n      errorData.requestId = data.requestId || 'UNKNOWN';\n    }\n    if ('message' in data) {\n      errorData.message = data.message || '';\n    }\n    if ('details' in data) {\n      errorData.details = data.details || {};\n    }\n    if ('sys' in data) {\n      if ('id' in data.sys) {\n        errorName = data.sys.id;\n      }\n    }\n  }\n\n  var error = new Error();\n  error.name = errorName && errorName !== 'Unknown' ? errorName : response.status + ' ' + response.statusText;\n  error.message = JSON.stringify(errorData, null, '  ');\n  throw error;\n}"]},"metadata":{},"sourceType":"module"}