{"ast":null,"code":"/**\n * Usages\n * @namespace Usage\n */\nimport { freezeSys, toPlainObject } from 'contentful-sdk-core';\nimport cloneDeep from 'lodash/cloneDeep';\n/**\n * @memberof Usage\n * @typedef Usage\n * @prop {Object} sys - System metadata\n * @prop {string} sys.id - User id in form {usagePeriod}_{orgID or spaceID}\n * @prop {string} sys.type - Entity type, ApiUsage\n * @prop {Object} sys.usagePeriod - Link to <UsagePeriod>\n * @prop {Object} organization - optional, depends on type of usage requested. Link to org\n * @prop {Object} space - optional, depends on type of usage requested. Link to space\n * @prop {string} unitOfMeasure\n * @prop {string} interval\n * @prop {string} startDate\n * @prop {string} endDate\n * @prop {Array<number>} usage\n */\n\n/**\n * @memberof Usage\n * @typedef UsageCollection\n * @prop {number} total\n * @prop {number} skip\n * @prop {number} limit\n * @prop {Object} sys\n * @prop {Array<Usage.Usage>} items\n * @prop {function(): Object} toPlainObject() - Returns this Space collection as a plain JS object\n */\n\n/**\n* This method normalizes each organization in a collection.\n * @private\n * @param {Object} http - HTTP client instance\n * @param {Object} data - Raw usage period collection data\n * @return {Usage.UsageCollection} Normalized usage period collection data\n */\n\nexport function wrapUsageCollection(http, data) {\n  var usages = toPlainObject(cloneDeep(data));\n  return freezeSys(usages);\n}","map":{"version":3,"sources":["C:/Users/στελης/Desktop/Hotel React/resort/node_modules/contentful-management/dist/es-modules/entities/usage.js"],"names":["freezeSys","toPlainObject","cloneDeep","wrapUsageCollection","http","data","usages"],"mappings":"AAAA;;;;AAIA,SAASA,SAAT,EAAoBC,aAApB,QAAyC,qBAAzC;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA;;;;;;;;;;;;;;;;AAgBA;;;;;;;;;;;AAWA;;;;;;;;AAOA,OAAO,SAASC,mBAAT,CAA6BC,IAA7B,EAAmCC,IAAnC,EAAyC;AAC9C,MAAIC,MAAM,GAAGL,aAAa,CAACC,SAAS,CAACG,IAAD,CAAV,CAA1B;AACA,SAAOL,SAAS,CAACM,MAAD,CAAhB;AACD","sourcesContent":["/**\n * Usages\n * @namespace Usage\n */\nimport { freezeSys, toPlainObject } from 'contentful-sdk-core';\nimport cloneDeep from 'lodash/cloneDeep';\n/**\n * @memberof Usage\n * @typedef Usage\n * @prop {Object} sys - System metadata\n * @prop {string} sys.id - User id in form {usagePeriod}_{orgID or spaceID}\n * @prop {string} sys.type - Entity type, ApiUsage\n * @prop {Object} sys.usagePeriod - Link to <UsagePeriod>\n * @prop {Object} organization - optional, depends on type of usage requested. Link to org\n * @prop {Object} space - optional, depends on type of usage requested. Link to space\n * @prop {string} unitOfMeasure\n * @prop {string} interval\n * @prop {string} startDate\n * @prop {string} endDate\n * @prop {Array<number>} usage\n */\n\n/**\n * @memberof Usage\n * @typedef UsageCollection\n * @prop {number} total\n * @prop {number} skip\n * @prop {number} limit\n * @prop {Object} sys\n * @prop {Array<Usage.Usage>} items\n * @prop {function(): Object} toPlainObject() - Returns this Space collection as a plain JS object\n */\n\n/**\n* This method normalizes each organization in a collection.\n * @private\n * @param {Object} http - HTTP client instance\n * @param {Object} data - Raw usage period collection data\n * @return {Usage.UsageCollection} Normalized usage period collection data\n */\nexport function wrapUsageCollection(http, data) {\n  var usages = toPlainObject(cloneDeep(data));\n  return freezeSys(usages);\n}"]},"metadata":{},"sourceType":"module"}