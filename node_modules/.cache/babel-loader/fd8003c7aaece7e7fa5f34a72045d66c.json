{"ast":null,"code":"/**\n * Snapshot instances\n * @namespace Snapshot\n */\nimport cloneDeep from 'lodash/cloneDeep';\nimport { freezeSys, toPlainObject } from 'contentful-sdk-core';\nimport enhanceWithMethods from '../enhance-with-methods';\n/**\n * @memberof Snapshot\n * @typedef Snapshot\n * @prop {Meta.Sys} sys - System metadata\n * @prop {Object<EntryFields.Field>} fields - Object with content for each field\n * @prop {function(): Object} toPlainObject() - Returns this Snapshot as a plain JS object\n */\n\nfunction createSnapshotApi(http) {\n  return {\n    /* In case the snapshot object evolve later */\n  };\n}\n/**\n * @private\n * @param {Object} http - HTTP client instance\n * @param {Object} data - Raw snapshot data\n * @return {Snapshot} Wrapped snapshot data\n */\n\n\nexport function wrapSnapshot(http, data) {\n  var snapshot = toPlainObject(cloneDeep(data));\n  enhanceWithMethods(snapshot, createSnapshotApi(http));\n  return freezeSys(snapshot);\n}\n/**\n * @private\n * @param {Object} http - HTTP client instance\n * @param {Object} data - Raw snapshot collection data\n * @return {ApiKeyCollection} Wrapped snapshot collection data\n */\n\nexport function wrapSnapshotCollection(http, data) {\n  var snapshots = toPlainObject(cloneDeep(data));\n  snapshots.items = snapshots.items.map(function (entity) {\n    return wrapSnapshot(http, entity);\n  });\n  return freezeSys(snapshots);\n}","map":{"version":3,"sources":["C:/Users/στελης/Desktop/Hotel React/resort/node_modules/contentful-management/dist/es-modules/entities/snapshot.js"],"names":["cloneDeep","freezeSys","toPlainObject","enhanceWithMethods","createSnapshotApi","http","wrapSnapshot","data","snapshot","wrapSnapshotCollection","snapshots","items","map","entity"],"mappings":"AAAA;;;;AAKA,OAAOA,SAAP,MAAsB,kBAAtB;AACA,SAASC,SAAT,EAAoBC,aAApB,QAAyC,qBAAzC;AACA,OAAOC,kBAAP,MAA+B,yBAA/B;AAEA;;;;;;;;AAOA,SAASC,iBAAT,CAA2BC,IAA3B,EAAiC;AAC/B,SAAO;AAAC;AAAD,GAAP;AACD;AACD;;;;;;;;AAMA,OAAO,SAASC,YAAT,CAAsBD,IAAtB,EAA4BE,IAA5B,EAAkC;AACvC,MAAIC,QAAQ,GAAGN,aAAa,CAACF,SAAS,CAACO,IAAD,CAAV,CAA5B;AACAJ,EAAAA,kBAAkB,CAACK,QAAD,EAAWJ,iBAAiB,CAACC,IAAD,CAA5B,CAAlB;AACA,SAAOJ,SAAS,CAACO,QAAD,CAAhB;AACD;AAED;;;;;;;AAMA,OAAO,SAASC,sBAAT,CAAgCJ,IAAhC,EAAsCE,IAAtC,EAA4C;AACjD,MAAIG,SAAS,GAAGR,aAAa,CAACF,SAAS,CAACO,IAAD,CAAV,CAA7B;AACAG,EAAAA,SAAS,CAACC,KAAV,GAAkBD,SAAS,CAACC,KAAV,CAAgBC,GAAhB,CAAoB,UAAUC,MAAV,EAAkB;AACtD,WAAOP,YAAY,CAACD,IAAD,EAAOQ,MAAP,CAAnB;AACD,GAFiB,CAAlB;AAGA,SAAOZ,SAAS,CAACS,SAAD,CAAhB;AACD","sourcesContent":["/**\n * Snapshot instances\n * @namespace Snapshot\n */\n\nimport cloneDeep from 'lodash/cloneDeep';\nimport { freezeSys, toPlainObject } from 'contentful-sdk-core';\nimport enhanceWithMethods from '../enhance-with-methods';\n\n/**\n * @memberof Snapshot\n * @typedef Snapshot\n * @prop {Meta.Sys} sys - System metadata\n * @prop {Object<EntryFields.Field>} fields - Object with content for each field\n * @prop {function(): Object} toPlainObject() - Returns this Snapshot as a plain JS object\n */\nfunction createSnapshotApi(http) {\n  return {/* In case the snapshot object evolve later */};\n}\n/**\n * @private\n * @param {Object} http - HTTP client instance\n * @param {Object} data - Raw snapshot data\n * @return {Snapshot} Wrapped snapshot data\n */\nexport function wrapSnapshot(http, data) {\n  var snapshot = toPlainObject(cloneDeep(data));\n  enhanceWithMethods(snapshot, createSnapshotApi(http));\n  return freezeSys(snapshot);\n}\n\n/**\n * @private\n * @param {Object} http - HTTP client instance\n * @param {Object} data - Raw snapshot collection data\n * @return {ApiKeyCollection} Wrapped snapshot collection data\n */\nexport function wrapSnapshotCollection(http, data) {\n  var snapshots = toPlainObject(cloneDeep(data));\n  snapshots.items = snapshots.items.map(function (entity) {\n    return wrapSnapshot(http, entity);\n  });\n  return freezeSys(snapshots);\n}"]},"metadata":{},"sourceType":"module"}