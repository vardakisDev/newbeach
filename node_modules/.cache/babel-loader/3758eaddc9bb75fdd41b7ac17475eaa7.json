{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n/**\n * Contentful Management API SDK. Allows you to create instances of a client\n * with access to the Contentful Content Management API.\n * @namespace contentfulManagement\n * @see ContentfulClientAPI\n */\n\n\nimport axios from 'axios';\nimport cloneDeep from 'lodash/cloneDeep';\nimport { createHttpClient, getUserAgentHeader } from 'contentful-sdk-core';\nimport createContentfulApi from './create-contentful-api';\n/**\n * Create a client instance\n * @func\n * @name createClient\n * @memberof contentfulManagement\n * @param {object} params - Client initialization parameters\n * @prop {string=} params.accessToken - Contentful CDA Access Token\n * @prop {boolean=?} params.insecure - Requests will be made over http instead of the default https (default: false)\n * @prop {boolean=?} params.retryOnError - If we should retry on errors and 429 rate limit exceptions (default: true)\n * @prop {string=?} params.host - API host (default: api.contentful.com)\n * @prop {string=?} params.hostUpload - direct file upload host (default : upload.contentful.com)\n * @prop {Object=?} params.httpAgent - Optional Node.js HTTP agent for proxying (see <a href=\"https://nodejs.org/api/http.html#http_class_http_agent\">Node.js docs</a> and <a href=\"https://www.npmjs.com/package/https-proxy-agent\">https-proxy-agent</a>)\n * @prop {Object=?} params.httpsAgent - Optional Node.js HTTP agent for proxying (see <a href=\"https://nodejs.org/api/http.html#http_class_http_agent\">Node.js docs</a> and <a href=\"https://www.npmjs.com/package/https-proxy-agent\">https-proxy-agent</a>)\n * @prop {Object=?} params.proxy - Optional Axios proxy (see <a href=\"https://github.com/mzabriskie/axios#request-config\"> axios docs </a>)\n * @prop {object=?} params.headers - Optional additional headers\n * @prop {function=} params.logHandler - A log handler function to process given log messages & errors. Receives the log level (error, warning & info) and the actual log data (Error object or string). (The default can be found at: https://github.com/contentful/contentful-sdk-core/blob/master/lib/create-http-client.js)\n * @prop {string=?} params.application - Application name and version e.g myApp/version\n * @prop {string=?} params.integration - Integration name and version e.g react/version\n * @prop {number=} params.timeout - Optional number of milliseconds before the request times out. Default is 30000\n * @prop {number=} params.retryLimit - Optional number of retries before failure. Default is 5\n * @prop {number=} params.maxContentLength - Optional maximum content length in bytes (default: 1073741824 i.e. 1GB)\n * @returns {ContentfulClientAPI.ClientAPI}\n * @example\n * const client = contentfulManagement.createClient({\n *  accessToken: 'myAccessToken'\n * })\n */\n\nexport function createClient(params) {\n  var defaultParameters = {\n    defaultHostname: 'api.contentful.com',\n    defaultHostnameUpload: 'upload.contentful.com'\n  };\n  var userAgentHeader = getUserAgentHeader('contentful-management.js/' + '5.12.1', params.application, params.integration, params.feature);\n  var requiredHeaders = {\n    'Content-Type': 'application/vnd.contentful.management.v1+json',\n    'X-Contentful-User-Agent': userAgentHeader\n  };\n  params = _extends({}, defaultParameters, cloneDeep(params));\n\n  if (!params.accessToken) {\n    throw new TypeError('Expected parameter accessToken');\n  }\n\n  params.headers = _extends({}, params.headers, requiredHeaders);\n  var http = createHttpClient(axios, params);\n  var api = createContentfulApi({\n    http: http\n  });\n  return api;\n}","map":{"version":3,"sources":["C:/Users/στελης/Desktop/Hotel React/resort/node_modules/contentful-management/dist/es-modules/contentful-management.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","axios","cloneDeep","createHttpClient","getUserAgentHeader","createContentfulApi","createClient","params","defaultParameters","defaultHostname","defaultHostnameUpload","userAgentHeader","application","integration","feature","requiredHeaders","accessToken","TypeError","headers","http","api"],"mappings":"AAAA,IAAIA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAAUC,MAAV,EAAkB;AAAE,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAE,QAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAtB;;AAA2B,SAAK,IAAII,GAAT,IAAgBD,MAAhB,EAAwB;AAAE,UAAIN,MAAM,CAACQ,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCJ,MAArC,EAA6CC,GAA7C,CAAJ,EAAuD;AAAEL,QAAAA,MAAM,CAACK,GAAD,CAAN,GAAcD,MAAM,CAACC,GAAD,CAApB;AAA4B;AAAE;AAAE;;AAAC,SAAOL,MAAP;AAAgB,CAAhQ;AAEA;;;;;;;;AAMA,OAAOS,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,SAASC,gBAAT,EAA2BC,kBAA3B,QAAqD,qBAArD;AACA,OAAOC,mBAAP,MAAgC,yBAAhC;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA,OAAO,SAASC,YAAT,CAAsBC,MAAtB,EAA8B;AACnC,MAAIC,iBAAiB,GAAG;AACtBC,IAAAA,eAAe,EAAE,oBADK;AAEtBC,IAAAA,qBAAqB,EAAE;AAFD,GAAxB;AAIA,MAAIC,eAAe,GAAGP,kBAAkB,CAAC,8BAA8B,QAA/B,EAAyCG,MAAM,CAACK,WAAhD,EAA6DL,MAAM,CAACM,WAApE,EAAiFN,MAAM,CAACO,OAAxF,CAAxC;AAEA,MAAIC,eAAe,GAAG;AACpB,oBAAgB,+CADI;AAEpB,+BAA2BJ;AAFP,GAAtB;AAKAJ,EAAAA,MAAM,GAAGlB,QAAQ,CAAC,EAAD,EAAKmB,iBAAL,EAAwBN,SAAS,CAACK,MAAD,CAAjC,CAAjB;;AAEA,MAAI,CAACA,MAAM,CAACS,WAAZ,EAAyB;AACvB,UAAM,IAAIC,SAAJ,CAAc,gCAAd,CAAN;AACD;;AAEDV,EAAAA,MAAM,CAACW,OAAP,GAAiB7B,QAAQ,CAAC,EAAD,EAAKkB,MAAM,CAACW,OAAZ,EAAqBH,eAArB,CAAzB;AAEA,MAAII,IAAI,GAAGhB,gBAAgB,CAACF,KAAD,EAAQM,MAAR,CAA3B;AACA,MAAIa,GAAG,GAAGf,mBAAmB,CAAC;AAC5Bc,IAAAA,IAAI,EAAEA;AADsB,GAAD,CAA7B;AAIA,SAAOC,GAAP;AACD","sourcesContent":["var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n/**\n * Contentful Management API SDK. Allows you to create instances of a client\n * with access to the Contentful Content Management API.\n * @namespace contentfulManagement\n * @see ContentfulClientAPI\n */\nimport axios from 'axios';\nimport cloneDeep from 'lodash/cloneDeep';\nimport { createHttpClient, getUserAgentHeader } from 'contentful-sdk-core';\nimport createContentfulApi from './create-contentful-api';\n\n/**\n * Create a client instance\n * @func\n * @name createClient\n * @memberof contentfulManagement\n * @param {object} params - Client initialization parameters\n * @prop {string=} params.accessToken - Contentful CDA Access Token\n * @prop {boolean=?} params.insecure - Requests will be made over http instead of the default https (default: false)\n * @prop {boolean=?} params.retryOnError - If we should retry on errors and 429 rate limit exceptions (default: true)\n * @prop {string=?} params.host - API host (default: api.contentful.com)\n * @prop {string=?} params.hostUpload - direct file upload host (default : upload.contentful.com)\n * @prop {Object=?} params.httpAgent - Optional Node.js HTTP agent for proxying (see <a href=\"https://nodejs.org/api/http.html#http_class_http_agent\">Node.js docs</a> and <a href=\"https://www.npmjs.com/package/https-proxy-agent\">https-proxy-agent</a>)\n * @prop {Object=?} params.httpsAgent - Optional Node.js HTTP agent for proxying (see <a href=\"https://nodejs.org/api/http.html#http_class_http_agent\">Node.js docs</a> and <a href=\"https://www.npmjs.com/package/https-proxy-agent\">https-proxy-agent</a>)\n * @prop {Object=?} params.proxy - Optional Axios proxy (see <a href=\"https://github.com/mzabriskie/axios#request-config\"> axios docs </a>)\n * @prop {object=?} params.headers - Optional additional headers\n * @prop {function=} params.logHandler - A log handler function to process given log messages & errors. Receives the log level (error, warning & info) and the actual log data (Error object or string). (The default can be found at: https://github.com/contentful/contentful-sdk-core/blob/master/lib/create-http-client.js)\n * @prop {string=?} params.application - Application name and version e.g myApp/version\n * @prop {string=?} params.integration - Integration name and version e.g react/version\n * @prop {number=} params.timeout - Optional number of milliseconds before the request times out. Default is 30000\n * @prop {number=} params.retryLimit - Optional number of retries before failure. Default is 5\n * @prop {number=} params.maxContentLength - Optional maximum content length in bytes (default: 1073741824 i.e. 1GB)\n * @returns {ContentfulClientAPI.ClientAPI}\n * @example\n * const client = contentfulManagement.createClient({\n *  accessToken: 'myAccessToken'\n * })\n */\nexport function createClient(params) {\n  var defaultParameters = {\n    defaultHostname: 'api.contentful.com',\n    defaultHostnameUpload: 'upload.contentful.com'\n  };\n  var userAgentHeader = getUserAgentHeader('contentful-management.js/' + '5.12.1', params.application, params.integration, params.feature);\n\n  var requiredHeaders = {\n    'Content-Type': 'application/vnd.contentful.management.v1+json',\n    'X-Contentful-User-Agent': userAgentHeader\n  };\n\n  params = _extends({}, defaultParameters, cloneDeep(params));\n\n  if (!params.accessToken) {\n    throw new TypeError('Expected parameter accessToken');\n  }\n\n  params.headers = _extends({}, params.headers, requiredHeaders);\n\n  var http = createHttpClient(axios, params);\n  var api = createContentfulApi({\n    http: http\n  });\n\n  return api;\n}"]},"metadata":{},"sourceType":"module"}