{"ast":null,"code":"var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nfunction _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n}\n\nimport cloneDeep from 'lodash/cloneDeep';\nvar UNRESOLVED_LINK = {}; // unique object to avoid polyfill bloat using Symbol()\n\n/**\n * isLink Function\n * Checks if the object has sys.type \"Link\"\n * @param object\n */\n\nvar isLink = function isLink(object) {\n  return object && object.sys && object.sys.type === 'Link';\n};\n/**\n * findNormalizableLinkInArray\n *\n * @param array\n * @param predicate\n * @return {*}\n */\n\n\nvar findNormalizableLinkInArray = function findNormalizableLinkInArray(array, predicate) {\n  for (var i = 0, len = array.length; i < len; i++) {\n    if (predicate(array[i])) {\n      return array[i];\n    }\n  }\n\n  return UNRESOLVED_LINK;\n};\n/**\n * getLink Function\n *\n * @param response\n * @param link\n * @return {undefined}\n */\n\n\nvar getLink = function getLink(allEntries, link) {\n  var _link$sys = link.sys,\n      type = _link$sys.linkType,\n      id = _link$sys.id;\n\n  var predicate = function predicate(_ref) {\n    var sys = _ref.sys;\n    return sys.type === type && sys.id === id;\n  };\n\n  return findNormalizableLinkInArray(allEntries, predicate);\n};\n/**\n * cleanUpLinks Function\n * - Removes unresolvable links from Arrays and Objects\n *\n * @param {Object[]|Object} input\n */\n\n\nvar cleanUpLinks = function cleanUpLinks(input) {\n  if (Array.isArray(input)) {\n    return input.filter(function (val) {\n      return val !== UNRESOLVED_LINK;\n    });\n  }\n\n  for (var key in input) {\n    if (input[key] === UNRESOLVED_LINK) {\n      delete input[key];\n    }\n  }\n\n  return input;\n};\n/**\n * walkMutate Function\n * @param input\n * @param predicate\n * @param mutator\n * @return {*}\n */\n\n\nvar walkMutate = function walkMutate(input, predicate, mutator, removeUnresolved) {\n  if (predicate(input)) {\n    return mutator(input);\n  }\n\n  if (input && (typeof input === 'undefined' ? 'undefined' : _typeof(input)) === 'object') {\n    for (var key in input) {\n      if (input.hasOwnProperty(key)) {\n        input[key] = walkMutate(input[key], predicate, mutator, removeUnresolved);\n      }\n    }\n\n    if (removeUnresolved) {\n      input = cleanUpLinks(input);\n    }\n  }\n\n  return input;\n};\n\nvar normalizeLink = function normalizeLink(allEntries, link, removeUnresolved) {\n  var resolvedLink = getLink(allEntries, link);\n\n  if (resolvedLink === UNRESOLVED_LINK) {\n    return removeUnresolved ? resolvedLink : link;\n  }\n\n  return resolvedLink;\n};\n\nvar makeEntryObject = function makeEntryObject(item, itemEntryPoints) {\n  if (!Array.isArray(itemEntryPoints)) {\n    return item;\n  }\n\n  var entryPoints = Object.keys(item).filter(function (ownKey) {\n    return itemEntryPoints.indexOf(ownKey) !== -1;\n  });\n  return entryPoints.reduce(function (entryObj, entryPoint) {\n    entryObj[entryPoint] = item[entryPoint];\n    return entryObj;\n  }, {});\n};\n/**\n * resolveResponse Function\n * Resolves contentful response to normalized form.\n * @param {Object} response Contentful response\n * @param {Object} options\n * @param {Boolean} options.removeUnresolved - Remove unresolved links default:false\n * @param {Array<String>} options.itemEntryPoints - Resolve links only in those item properties\n * @return {Object}\n */\n\n\nvar resolveResponse = function resolveResponse(response, options) {\n  options = options || {};\n\n  if (!response.items) {\n    return [];\n  }\n\n  var responseClone = cloneDeep(response);\n  var allIncludes = Object.keys(responseClone.includes || {}).reduce(function (all, type) {\n    return [].concat(_toConsumableArray(all), _toConsumableArray(response.includes[type]));\n  }, []);\n  var allEntries = [].concat(_toConsumableArray(responseClone.items), _toConsumableArray(allIncludes));\n  allEntries.forEach(function (item) {\n    var entryObject = makeEntryObject(item, options.itemEntryPoints);\n    Object.assign(item, walkMutate(entryObject, isLink, function (link) {\n      return normalizeLink(allEntries, link, options.removeUnresolved);\n    }, options.removeUnresolved));\n  });\n  return responseClone.items;\n};\n\nexport default resolveResponse;","map":{"version":3,"sources":["C:/Users/στελης/Desktop/Hotel React/resort/Beachresort/node_modules/contentful-resolve-response/dist/esm/index.js"],"names":["_typeof","Symbol","iterator","obj","constructor","prototype","_toConsumableArray","arr","Array","isArray","i","arr2","length","from","cloneDeep","UNRESOLVED_LINK","isLink","object","sys","type","findNormalizableLinkInArray","array","predicate","len","getLink","allEntries","link","_link$sys","linkType","id","_ref","cleanUpLinks","input","filter","val","key","walkMutate","mutator","removeUnresolved","hasOwnProperty","normalizeLink","resolvedLink","makeEntryObject","item","itemEntryPoints","entryPoints","Object","keys","ownKey","indexOf","reduce","entryObj","entryPoint","resolveResponse","response","options","items","responseClone","allIncludes","includes","all","concat","forEach","entryObject","assign"],"mappings":"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","sourcesContent":["var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nimport cloneDeep from 'lodash/cloneDeep';\n\nvar UNRESOLVED_LINK = {}; // unique object to avoid polyfill bloat using Symbol()\n\n/**\n * isLink Function\n * Checks if the object has sys.type \"Link\"\n * @param object\n */\nvar isLink = function isLink(object) {\n  return object && object.sys && object.sys.type === 'Link';\n};\n\n/**\n * findNormalizableLinkInArray\n *\n * @param array\n * @param predicate\n * @return {*}\n */\nvar findNormalizableLinkInArray = function findNormalizableLinkInArray(array, predicate) {\n  for (var i = 0, len = array.length; i < len; i++) {\n    if (predicate(array[i])) {\n      return array[i];\n    }\n  }\n  return UNRESOLVED_LINK;\n};\n\n/**\n * getLink Function\n *\n * @param response\n * @param link\n * @return {undefined}\n */\nvar getLink = function getLink(allEntries, link) {\n  var _link$sys = link.sys,\n      type = _link$sys.linkType,\n      id = _link$sys.id;\n\n\n  var predicate = function predicate(_ref) {\n    var sys = _ref.sys;\n    return sys.type === type && sys.id === id;\n  };\n\n  return findNormalizableLinkInArray(allEntries, predicate);\n};\n\n/**\n * cleanUpLinks Function\n * - Removes unresolvable links from Arrays and Objects\n *\n * @param {Object[]|Object} input\n */\nvar cleanUpLinks = function cleanUpLinks(input) {\n  if (Array.isArray(input)) {\n    return input.filter(function (val) {\n      return val !== UNRESOLVED_LINK;\n    });\n  }\n  for (var key in input) {\n    if (input[key] === UNRESOLVED_LINK) {\n      delete input[key];\n    }\n  }\n  return input;\n};\n\n/**\n * walkMutate Function\n * @param input\n * @param predicate\n * @param mutator\n * @return {*}\n */\nvar walkMutate = function walkMutate(input, predicate, mutator, removeUnresolved) {\n  if (predicate(input)) {\n    return mutator(input);\n  }\n\n  if (input && (typeof input === 'undefined' ? 'undefined' : _typeof(input)) === 'object') {\n    for (var key in input) {\n      if (input.hasOwnProperty(key)) {\n        input[key] = walkMutate(input[key], predicate, mutator, removeUnresolved);\n      }\n    }\n    if (removeUnresolved) {\n      input = cleanUpLinks(input);\n    }\n  }\n  return input;\n};\n\nvar normalizeLink = function normalizeLink(allEntries, link, removeUnresolved) {\n  var resolvedLink = getLink(allEntries, link);\n  if (resolvedLink === UNRESOLVED_LINK) {\n    return removeUnresolved ? resolvedLink : link;\n  }\n  return resolvedLink;\n};\n\nvar makeEntryObject = function makeEntryObject(item, itemEntryPoints) {\n  if (!Array.isArray(itemEntryPoints)) {\n    return item;\n  }\n\n  var entryPoints = Object.keys(item).filter(function (ownKey) {\n    return itemEntryPoints.indexOf(ownKey) !== -1;\n  });\n\n  return entryPoints.reduce(function (entryObj, entryPoint) {\n    entryObj[entryPoint] = item[entryPoint];\n    return entryObj;\n  }, {});\n};\n\n/**\n * resolveResponse Function\n * Resolves contentful response to normalized form.\n * @param {Object} response Contentful response\n * @param {Object} options\n * @param {Boolean} options.removeUnresolved - Remove unresolved links default:false\n * @param {Array<String>} options.itemEntryPoints - Resolve links only in those item properties\n * @return {Object}\n */\nvar resolveResponse = function resolveResponse(response, options) {\n  options = options || {};\n  if (!response.items) {\n    return [];\n  }\n  var responseClone = cloneDeep(response);\n  var allIncludes = Object.keys(responseClone.includes || {}).reduce(function (all, type) {\n    return [].concat(_toConsumableArray(all), _toConsumableArray(response.includes[type]));\n  }, []);\n\n  var allEntries = [].concat(_toConsumableArray(responseClone.items), _toConsumableArray(allIncludes));\n\n  allEntries.forEach(function (item) {\n    var entryObject = makeEntryObject(item, options.itemEntryPoints);\n\n    Object.assign(item, walkMutate(entryObject, isLink, function (link) {\n      return normalizeLink(allEntries, link, options.removeUnresolved);\n    }, options.removeUnresolved));\n  });\n\n  return responseClone.items;\n};\n\nexport default resolveResponse;"]},"metadata":{},"sourceType":"module"}