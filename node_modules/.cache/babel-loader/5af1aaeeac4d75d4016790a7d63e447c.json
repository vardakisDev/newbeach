{"ast":null,"code":"/**\n * Environment alias instances\n * @namespace EnvironmentAlias\n * @description Environment aliases allow environments to be accessed through another identifier. You must have a V2 org and manually opt-in to this feature from the\n *  environments settings page in the Contentful web app. If you do not have access to this feature, these methods will return 403 errors.\n */\nimport cloneDeep from 'lodash/cloneDeep';\nimport { freezeSys, toPlainObject } from 'contentful-sdk-core';\nimport enhanceWithMethods from '../enhance-with-methods';\nimport { createUpdateEntity } from '../instance-actions';\n/**\n * @memberof EnvironmentAlias\n * @typedef EnvironmentAlias\n * @prop {Object} sys - System metadata\n * @prop {string} sys.id - EnvironmentAlias id\n * @prop {string} sys.type - Entity type\n * @prop {Environment} environment - the environment this alias points to\n * @prop {function(): Object} toPlainObject() - Returns this EnvironmentAlias as a plain JS object\n */\n\n/**\n * @memberof EnvironmentAlias\n * @typedef EnvironmentAliasCollection\n * @prop {number} total\n * @prop {number} skip\n * @prop {number} limit\n * @prop {Array<EnvironmentAlias.EnvironmentAlias>} items\n * @prop {function(): Object} toPlainObject() - Returns this EnvironmentAlias collection as a plain JS object\n */\n\nfunction createEnvironmentAliasApi(http) {\n  return {\n    /**\n     * Sends an update to the server with any changes made to the object's properties. Currently, you can only change the id of the alias's underlying environment. See the example below.\n     * @memberof EnvironmentAlias\n     * @func update\n     * @return {Promise<EnvironmentAlias>} Object returned from the server with updated changes.\n     * @example\n     * const contentful = require('contentful-management')\n     *\n     * const client = contentful.createClient({\n     *   accessToken: '<content_management_api_key>'\n     * })\n     *\n     * client.getSpace('<space_id>')\n     * .then((space) => space.getEnvironmentAlias('<environment_alias_id>'))\n     * .then((alias) => {\n     *   alias.environment.sys.id = '<environment_id>'\n     *   return alias.update()\n     * })\n     * .then((alias) => console.log(`alias ${alias.sys.id} updated.`))\n     * .catch(console.error)\n     */\n    update: createUpdateEntity({\n      http: http,\n      entityPath: 'environment_aliases',\n      wrapperMethod: wrapEnvironmentAlias\n    })\n  };\n}\n/**\n * @private\n * @param {Object} http - HTTP client instance\n * @param {Object} data - Raw environment alias data\n * @return {EnvironmentAlias} Wrapped environment alias data\n */\n\n\nexport function wrapEnvironmentAlias(http, data) {\n  var alias = toPlainObject(cloneDeep(data));\n  enhanceWithMethods(alias, createEnvironmentAliasApi(http));\n  return freezeSys(alias);\n}\n/**\n * @private\n * @param {Object} http - HTTP client instance\n * @param {Object} data - Raw environment alias collection data\n * @return {EnvironmentAliasCollection} Wrapped environment alias collection data\n */\n\nexport function wrapEnvironmentAliasCollection(http, data) {\n  var aliases = toPlainObject(cloneDeep(data));\n  aliases.items = aliases.items.map(function (entity) {\n    return wrapEnvironmentAlias(http, entity);\n  });\n  return freezeSys(aliases);\n}","map":{"version":3,"sources":["C:/Users/στελης/Desktop/Hotel React/resort/node_modules/contentful-management/dist/es-modules/entities/environment-alias.js"],"names":["cloneDeep","freezeSys","toPlainObject","enhanceWithMethods","createUpdateEntity","createEnvironmentAliasApi","http","update","entityPath","wrapperMethod","wrapEnvironmentAlias","data","alias","wrapEnvironmentAliasCollection","aliases","items","map","entity"],"mappings":"AAAA;;;;;;AAMA,OAAOA,SAAP,MAAsB,kBAAtB;AACA,SAASC,SAAT,EAAoBC,aAApB,QAAyC,qBAAzC;AACA,OAAOC,kBAAP,MAA+B,yBAA/B;AACA,SAASC,kBAAT,QAAmC,qBAAnC;AAEA;;;;;;;;;;AAUA;;;;;;;;;;AASA,SAASC,yBAAT,CAAmCC,IAAnC,EAAyC;AACvC,SAAO;AACL;;;;;;;;;;;;;;;;;;;;;AAqBAC,IAAAA,MAAM,EAAEH,kBAAkB,CAAC;AACzBE,MAAAA,IAAI,EAAEA,IADmB;AAEzBE,MAAAA,UAAU,EAAE,qBAFa;AAGzBC,MAAAA,aAAa,EAAEC;AAHU,KAAD;AAtBrB,GAAP;AA4BD;AAED;;;;;;;;AAMA,OAAO,SAASA,oBAAT,CAA8BJ,IAA9B,EAAoCK,IAApC,EAA0C;AAC/C,MAAIC,KAAK,GAAGV,aAAa,CAACF,SAAS,CAACW,IAAD,CAAV,CAAzB;AACAR,EAAAA,kBAAkB,CAACS,KAAD,EAAQP,yBAAyB,CAACC,IAAD,CAAjC,CAAlB;AACA,SAAOL,SAAS,CAACW,KAAD,CAAhB;AACD;AAED;;;;;;;AAMA,OAAO,SAASC,8BAAT,CAAwCP,IAAxC,EAA8CK,IAA9C,EAAoD;AACzD,MAAIG,OAAO,GAAGZ,aAAa,CAACF,SAAS,CAACW,IAAD,CAAV,CAA3B;AACAG,EAAAA,OAAO,CAACC,KAAR,GAAgBD,OAAO,CAACC,KAAR,CAAcC,GAAd,CAAkB,UAAUC,MAAV,EAAkB;AAClD,WAAOP,oBAAoB,CAACJ,IAAD,EAAOW,MAAP,CAA3B;AACD,GAFe,CAAhB;AAGA,SAAOhB,SAAS,CAACa,OAAD,CAAhB;AACD","sourcesContent":["/**\n * Environment alias instances\n * @namespace EnvironmentAlias\n * @description Environment aliases allow environments to be accessed through another identifier. You must have a V2 org and manually opt-in to this feature from the\n *  environments settings page in the Contentful web app. If you do not have access to this feature, these methods will return 403 errors.\n */\nimport cloneDeep from 'lodash/cloneDeep';\nimport { freezeSys, toPlainObject } from 'contentful-sdk-core';\nimport enhanceWithMethods from '../enhance-with-methods';\nimport { createUpdateEntity } from '../instance-actions';\n\n/**\n * @memberof EnvironmentAlias\n * @typedef EnvironmentAlias\n * @prop {Object} sys - System metadata\n * @prop {string} sys.id - EnvironmentAlias id\n * @prop {string} sys.type - Entity type\n * @prop {Environment} environment - the environment this alias points to\n * @prop {function(): Object} toPlainObject() - Returns this EnvironmentAlias as a plain JS object\n */\n\n/**\n * @memberof EnvironmentAlias\n * @typedef EnvironmentAliasCollection\n * @prop {number} total\n * @prop {number} skip\n * @prop {number} limit\n * @prop {Array<EnvironmentAlias.EnvironmentAlias>} items\n * @prop {function(): Object} toPlainObject() - Returns this EnvironmentAlias collection as a plain JS object\n */\nfunction createEnvironmentAliasApi(http) {\n  return {\n    /**\n     * Sends an update to the server with any changes made to the object's properties. Currently, you can only change the id of the alias's underlying environment. See the example below.\n     * @memberof EnvironmentAlias\n     * @func update\n     * @return {Promise<EnvironmentAlias>} Object returned from the server with updated changes.\n     * @example\n     * const contentful = require('contentful-management')\n     *\n     * const client = contentful.createClient({\n     *   accessToken: '<content_management_api_key>'\n     * })\n     *\n     * client.getSpace('<space_id>')\n     * .then((space) => space.getEnvironmentAlias('<environment_alias_id>'))\n     * .then((alias) => {\n     *   alias.environment.sys.id = '<environment_id>'\n     *   return alias.update()\n     * })\n     * .then((alias) => console.log(`alias ${alias.sys.id} updated.`))\n     * .catch(console.error)\n     */\n    update: createUpdateEntity({\n      http: http,\n      entityPath: 'environment_aliases',\n      wrapperMethod: wrapEnvironmentAlias\n    })\n  };\n}\n\n/**\n * @private\n * @param {Object} http - HTTP client instance\n * @param {Object} data - Raw environment alias data\n * @return {EnvironmentAlias} Wrapped environment alias data\n */\nexport function wrapEnvironmentAlias(http, data) {\n  var alias = toPlainObject(cloneDeep(data));\n  enhanceWithMethods(alias, createEnvironmentAliasApi(http));\n  return freezeSys(alias);\n}\n\n/**\n * @private\n * @param {Object} http - HTTP client instance\n * @param {Object} data - Raw environment alias collection data\n * @return {EnvironmentAliasCollection} Wrapped environment alias collection data\n */\nexport function wrapEnvironmentAliasCollection(http, data) {\n  var aliases = toPlainObject(cloneDeep(data));\n  aliases.items = aliases.items.map(function (entity) {\n    return wrapEnvironmentAlias(http, entity);\n  });\n  return freezeSys(aliases);\n}"]},"metadata":{},"sourceType":"module"}